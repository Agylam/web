{{ define "ingress_app" }}
{{- $ := index . 0 -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $.Values.global.project }}-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_http_version 1.1;
      proxy_set_header Upgrade "websocket";
      proxy_set_header Connection "Upgrade";
spec:
  ingressClassName: nginx
  rules:
  {{ if $.Values.global.isTag -}}
  - host: {{ $.Values.ingress.baseDomain }}
{{- else -}}
  - host: {{ $.Values.global.ref }}.{{ $.Values.ingress.baseDomain }}
{{- end }}
    http:
      paths:
      - path: /ws(/|$)
        pathType: ImplementationSpecific
        backend:
          service:
            name: backend
            port:
              number: {{ index $.Values.backend.ports 1 }}
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ $.Values.ingress.toService }}
            port:
              number: {{ index (get $.Values ($.Values.ingress.toService)).ports 0 }}
  tls:
  - hosts:
    {{ if $.Values.global.isTag -}}
    - {{ $.Values.ingress.baseDomain }}
  {{- else -}}
    - {{ $.Values.global.ref }}.{{ $.Values.ingress.baseDomain }}
  {{- end }}
    secretName: {{ $.Values.global.project }}-{{ $.Values.werf.env }}-cert
{{ end }}

{{ include "ingress_app" (list $) }}